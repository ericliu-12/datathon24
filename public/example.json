{
  "Project": "Design Netflix",
  "Nodes": [
    {
      "id": 1,
      "title": "User",
      "subtitle": "Client Application",
      "description": "The user interacts with the Netflix application through a web browser, mobile app, or smart TV app.",
      "technologies": ["Web App", "Mobile App", "Smart TV App"],
      "protocols": ["HTTP/HTTPS", "TCP/IP"]
    },
    {
      "id": 2,
      "title": "Load Balancer",
      "subtitle": "Distributes incoming traffic",
      "description": "Directs incoming traffic to multiple application servers to ensure scalability and high availability.",
      "technologies": ["HAProxy", "NGINX"],
      "protocols": ["HTTP/HTTPS", "TCP/IP"]
    },
    {
      "id": 3,
      "title": "Application Server",
      "subtitle": "Handles user requests",
      "description": "Processes user requests, retrieves data from the database, and returns responses to the user.",
      "technologies": ["Java", "Python", "Node.js"],
      "protocols": ["HTTP/HTTPS", "TCP/IP"]
    },
    {
      "id": 4,
      "title": "Database",
      "subtitle": "Stores user data and content metadata",
      "description": "Stores user information, content metadata, and viewing history.",
      "technologies": ["MySQL", "MongoDB", "Cassandra"],
      "protocols": ["SQL", "NoSQL"]
    },
    {
      "id": 5,
      "title": "Content Delivery Network (CDN)",
      "subtitle": "Distributes video content",
      "description": "Delivers video content to users through a network of edge servers, reducing latency and improving performance.",
      "technologies": [
        "Akamai",
        "Cloudflare",
        "Verizon Digital Media Services"
      ],
      "protocols": ["HTTP/HTTPS", "TCP/IP"]
    },
    {
      "id": 6,
      "title": "Recommendation Engine",
      "subtitle": "Generates personalized recommendations",
      "description": "Analyzes user viewing history and generates personalized content recommendations.",
      "technologies": ["Apache Mahout", "TensorFlow", "PyTorch"],
      "protocols": ["HTTP/HTTPS", "TCP/IP"]
    },
    {
      "id": 7,
      "title": "Cache Layer",
      "subtitle": "Improves performance with caching",
      "description": "Stores frequently accessed data in memory to reduce database queries and improve performance.",
      "technologies": ["Redis", "Memcached"],
      "protocols": ["HTTP/HTTPS", "TCP/IP"]
    }
  ],
  "Connections": [
    {
      "source": 1,
      "destination": 2,
      "label": "User Request",
      "description": "The user sends a request to the load balancer."
    },
    {
      "source": 2,
      "destination": 3,
      "label": "Load Balancing",
      "description": "The load balancer directs the request to an application server."
    },
    {
      "source": 3,
      "destination": 4,
      "label": "Database Query",
      "description": "The application server retrieves data from the database."
    },
    {
      "source": 3,
      "destination": 5,
      "label": "Content Request",
      "description": "The application server requests video content from the CDN."
    },
    {
      "source": 5,
      "destination": 1,
      "label": "Content Delivery",
      "description": "The CDN delivers video content to the user."
    },
    {
      "source": 3,
      "destination": 6,
      "label": "Recommendation Request",
      "description": "The application server requests personalized recommendations from the recommendation engine."
    },
    {
      "source": 3,
      "destination": 7,
      "label": "Cache Query",
      "description": "The application server checks the cache layer for frequently accessed data."
    }
  ],
  "Flow": [
    {
      "scenario": "User Requests Video Content",
      "steps": [
        {
          "action": "User sends request to load balancer",
          "node": "User (1)"
        },
        {
          "action": "Load balancer directs request to application server",
          "node": "Load Balancer (2)"
        },
        {
          "action": "Application server retrieves data from database",
          "node": "Application Server (3)"
        },
        {
          "action": "Application server requests video content from CDN",
          "node": "Application Server (3)"
        },
        {
          "action": "CDN delivers video content to user",
          "node": "Content Delivery Network (5)"
        }
      ]
    },
    {
      "scenario": "User Receives Personalized Recommendations",
      "steps": [
        {
          "action": "User interacts with application",
          "node": "User (1)"
        },
        {
          "action": "Application server requests recommendations from recommendation engine",
          "node": "Application Server (3)"
        },
        {
          "action": "Recommendation engine generates personalized recommendations",
          "node": "Recommendation Engine (6)"
        },
        {
          "action": "Recommendation engine returns recommendations to application server",
          "node": "Recommendation Engine (6)"
        },
        {
          "action": "Application server displays recommendations to user",
          "node": "Application Server (3)"
        }
      ]
    }
  ]
}
